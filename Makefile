#############################################################################
# Makefile for building: projekt_bazy
# Generated by qmake (2.01a) (Qt 4.8.6) on: sob. sty 9 17:22:19 2016
# Project:  projekt_bazy.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile projekt_bazy.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I/usr/include/mysql -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu/qt4/plugins/sqldrivers -lqsqlmysql -lQtSql -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		loginwindow.cpp \
		repository/database.cpp \
		daos/dao.cpp \
		daos/user_login_dao.cpp \
		controlers/login_controler.cpp \
		models/user.cpp \
		windows/choose_module.cpp moc_loginwindow.cpp \
		moc_login_controler.cpp \
		moc_choose_module.cpp
OBJECTS       = main.o \
		loginwindow.o \
		database.o \
		dao.o \
		user_login_dao.o \
		login_controler.o \
		user.o \
		choose_module.o \
		moc_loginwindow.o \
		moc_login_controler.o \
		moc_choose_module.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		projekt_bazy.pro
QMAKE_TARGET  = projekt_bazy
DESTDIR       = 
TARGET        = projekt_bazy

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_loginwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: projekt_bazy.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf
	$(QMAKE) -o Makefile projekt_bazy.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -o Makefile projekt_bazy.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/projekt_bazy1.0.0 || $(MKDIR) .tmp/projekt_bazy1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/projekt_bazy1.0.0/ && $(COPY_FILE) --parents loginwindow.h repository/database.h daos/dao.h daos/user_login_dao.h controlers/login_controler.h models/user.h windows/choose_module.h .tmp/projekt_bazy1.0.0/ && $(COPY_FILE) --parents main.cpp loginwindow.cpp repository/database.cpp daos/dao.cpp daos/user_login_dao.cpp controlers/login_controler.cpp models/user.cpp windows/choose_module.cpp .tmp/projekt_bazy1.0.0/ && $(COPY_FILE) --parents loginwindow.ui .tmp/projekt_bazy1.0.0/ && (cd `dirname .tmp/projekt_bazy1.0.0` && $(TAR) projekt_bazy1.0.0.tar projekt_bazy1.0.0 && $(COMPRESS) projekt_bazy1.0.0.tar) && $(MOVE) `dirname .tmp/projekt_bazy1.0.0`/projekt_bazy1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/projekt_bazy1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_loginwindow.cpp moc_login_controler.cpp moc_choose_module.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_loginwindow.cpp moc_login_controler.cpp moc_choose_module.cpp
moc_loginwindow.cpp: controlers/login_controler.h \
		daos/user_login_dao.h \
		daos/dao.h \
		repository/database.h \
		models/user.h \
		loginwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) loginwindow.h -o moc_loginwindow.cpp

moc_login_controler.cpp: daos/user_login_dao.h \
		daos/dao.h \
		repository/database.h \
		models/user.h \
		controlers/login_controler.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) controlers/login_controler.h -o moc_login_controler.cpp

moc_choose_module.cpp: windows/choose_module.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) windows/choose_module.h -o moc_choose_module.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_loginwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_loginwindow.h
ui_loginwindow.h: loginwindow.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic loginwindow.ui -o ui_loginwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp loginwindow.h \
		controlers/login_controler.h \
		daos/user_login_dao.h \
		daos/dao.h \
		repository/database.h \
		models/user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

loginwindow.o: loginwindow.cpp loginwindow.h \
		controlers/login_controler.h \
		daos/user_login_dao.h \
		daos/dao.h \
		repository/database.h \
		models/user.h \
		ui_loginwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o loginwindow.o loginwindow.cpp

database.o: repository/database.cpp repository/database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o database.o repository/database.cpp

dao.o: daos/dao.cpp daos/dao.h \
		repository/database.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dao.o daos/dao.cpp

user_login_dao.o: daos/user_login_dao.cpp daos/user_login_dao.h \
		daos/dao.h \
		repository/database.h \
		models/user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o user_login_dao.o daos/user_login_dao.cpp

login_controler.o: controlers/login_controler.cpp controlers/login_controler.h \
		daos/user_login_dao.h \
		daos/dao.h \
		repository/database.h \
		models/user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o login_controler.o controlers/login_controler.cpp

user.o: models/user.cpp models/user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o user.o models/user.cpp

choose_module.o: windows/choose_module.cpp windows/choose_module.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o choose_module.o windows/choose_module.cpp

moc_loginwindow.o: moc_loginwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_loginwindow.o moc_loginwindow.cpp

moc_login_controler.o: moc_login_controler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_login_controler.o moc_login_controler.cpp

moc_choose_module.o: moc_choose_module.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_choose_module.o moc_choose_module.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

